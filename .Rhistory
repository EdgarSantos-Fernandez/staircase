axis.text.x = element_text(angle = 60, hjust = 1),
strip.text.x = element_text(size = 14))
x11(width = 10, height = 2); mcmc_dens_overlay(
array,
pars = c(
"beta[1]",
"beta[2]"),
facet_args = list(nrow = 1)
) +
theme(axis.text = element_text(size = 14),
axis.text.x = element_text(angle = 45, hjust = 1),
strip.text.x = element_text(size = 14))
seed <- 202105
set.seed(seed)
# spatial exponential with two covariates
fit <- ir_spat(formula = site ~ -1 + Moving + Babies,
data = data,
spat_model = 'exp',
itemtype = '1PLUS',
abil = 'user',
diff = 'id',
y = 'correct',
coords = c("LocationX", "LocationY"),
iter = 10000,
warmup = 5000,
chains = 3,
refresh = 100,
seed = seed
)
saveRDS(fit, 'fit_spatial_covar7.rds')
stats <- summary(fit)
stats <- stats$summary
array <- as.array(fit)
x11(width = 10, height = 2); mcmc_dens_overlay(
array,
pars = c("abil[1]",
"abil[2]",
"abil[15]",
"abil[24]"),
facet_args = list(nrow = 1))
abils <- stats[grep('abil\\[', rownames(stats)),]
abils <- cbind(abils, data %>% group_by(user) %>% summarize(ns = n(), prop = mean(correct)) %>% data.frame())
names(abils)[grep('%', names(abils))] <- c('q2.5','q25', 'q50', 'q75', 'q97.5')
stats <- summary(fit)
stats <- stats$summary
array <- as.array(fit)
abils <- stats[grep('abil\\[', rownames(stats)),]
abils <- cbind(abils, data %>% group_by(user) %>% summarize(ns = n(), prop = mean(correct)) %>% data.frame())
names(abils)[grep('%', names(abils))] <- c('q2.5','q25', 'q50', 'q75', 'q97.5')
x11(); ggplot(abils, aes(x= prop, y = mean)) + geom_point() +
xlab('proportion of correct classification')
x11(); mcmc_trace(fit, pars = c(
"abil[1]",
"abil[2]",
"abil[3]",
"abil[4]",
"abil[5]",
"abil[6]"))
x11(width = 10, height = 2); mcmc_dens_overlay(
array,
pars = c(
"difficulty[1]",
"difficulty[2]",
"difficulty[3]",
"difficulty[4]",
"difficulty[5]",
"difficulty[6]"),
facet_args = list(nrow = 1)
) +
theme(axis.text = element_text(size = 14),
axis.text.x = element_text(angle = 45, hjust = 1),
strip.text.x = element_text(size = 14))
diff <- stats[grep('difficulty\\[', rownames(stats)),]
diff <- cbind(diff, data %>% group_by(id, LocationX, LocationY) %>% summarize(ns = n(), prop = mean(correct)) %>% data.frame())
diff$diff_cat <- cut(diff$mean, breaks = c(-10,quantile(diff$mean)[2:4],10), 1:4, include.lowest = T)
cols = brewer.pal(5,'Reds')
x11(); ggplot(diff , aes(LocationX, LocationY, fill = diff_cat)) +
stat_voronoi(color="black") + scale_fill_manual(values=cols) +
geom_point() +
geom_text(aes(LocationX, LocationY+1000, label = id), size = 2)+
coord_fixed(ratio=1)+ theme_bw()
x11(width = 10, height = 2); mcmc_dens_overlay(
array,
pars = c(
"diff_species[1]",
"diff_species[2]",
"diff_species[3]",
"diff_species[4]",
"diff_species[5]",
"diff_species[6]"),
facet_args = list(nrow = 1)
) +
theme(axis.text = element_text(size = 14),
axis.text.x = element_text(angle = 45, hjust = 1),
strip.text.x = element_text(size = 14))
species <- stats[grep('species\\[', rownames(stats)),]
species <- cbind(species, data %>% group_by(True_Species) %>% summarize(ns = n(), prop = mean(correct)) %>% data.frame())
names(species)[grep('%', names(species))] <- c('q2.5','q25', 'q50', 'q75', 'q97.5')
x11(); ggplot(species, aes(x= prop, y = mean)) + geom_point() +
geom_errorbar(aes(ymin=q2.5, ymax=q97.5))
x11(width = 5, height = 2);mcmc_dens_overlay(
array,
pars = c(
"var_ed",
"alpha_ed",
"var_nug"),
facet_args = list(nrow = 1)
) +
theme(axis.text = element_text(size = 14),
axis.text.x = element_text(angle = 60, hjust = 1),
strip.text.x = element_text(size = 14))
x11(width = 10, height = 2); mcmc_dens_overlay(
array,
pars = c(
"beta[1]",
"beta[2]"),
facet_args = list(nrow = 1)
) +
theme(axis.text = element_text(size = 14),
axis.text.x = element_text(angle = 45, hjust = 1),
strip.text.x = element_text(size = 14))
source('./R/0 functions.R')
source('./R/0 functions.R')
fit2 <- ir_spat(data = data,
spat_model = 'exp',
itemtype = '1PLUS',
abil = 'user',
diff = 'id',
y = 'correct',
coords = c("LocationX", "LocationY"),
iter = 10000,
warmup = 5000,
chains = 3,
refresh = 100,
seed = seed
)
matrix(1)
source('./R/0 functions.R')
fit2 <- ir_spat(data = data,
spat_model = 'exp',
itemtype = '1PLUS',
abil = 'user',
diff = 'id',
y = 'correct',
coords = c("LocationX", "LocationY"),
iter = 10000,
warmup = 5000,
chains = 3,
refresh = 100,
seed = seed
)
matrix(NA, nrow(data), 1)
source('./R/0 functions.R')
fit2 <- ir_spat(data = data,
spat_model = 'exp',
itemtype = '1PLUS',
abil = 'user',
diff = 'id',
y = 'correct',
coords = c("LocationX", "LocationY"),
iter = 10000,
warmup = 5000,
chains = 3,
refresh = 100,
seed = seed
)
fit = fit2
saveRDS(fit, 'fit_spatial_nocovar.rds')
stats <- summary(fit)
stats <- stats$summary
array <- as.array(fit)
x11(width = 10, height = 2); mcmc_dens_overlay(
array,
pars = c("abil[1]",
"abil[2]",
"abil[15]",
"abil[24]"),
facet_args = list(nrow = 1))
abils <- stats[grep('abil\\[', rownames(stats)),]
abils <- cbind(abils, data %>% group_by(user) %>% summarize(ns = n(), prop = mean(correct)) %>% data.frame())
names(abils)[grep('%', names(abils))] <- c('q2.5','q25', 'q50', 'q75', 'q97.5')
x11(); ggplot(abils, aes(x= prop, y = mean)) + geom_point() +
xlab('proportion of correct classification')
x11(); mcmc_trace(fit, pars = c(
"abil[1]",
"abil[2]",
"abil[3]",
"abil[4]",
"abil[5]",
"abil[6]"))
x11(width = 10, height = 2); mcmc_dens_overlay(
array,
pars = c(
"difficulty[1]",
"difficulty[2]",
"difficulty[3]",
"difficulty[4]",
"difficulty[5]",
"difficulty[6]"),
facet_args = list(nrow = 1)
) +
theme(axis.text = element_text(size = 14),
axis.text.x = element_text(angle = 45, hjust = 1),
strip.text.x = element_text(size = 14))
diff <- stats[grep('difficulty\\[', rownames(stats)),]
diff <- cbind(diff, data %>% group_by(id, LocationX, LocationY) %>% summarize(ns = n(), prop = mean(correct)) %>% data.frame())
diff$diff_cat <- cut(diff$mean, breaks = c(-10,quantile(diff$mean)[2:4],10), 1:4, include.lowest = T)
cols = brewer.pal(5,'Reds')
x11(); ggplot(diff , aes(LocationX, LocationY, fill = diff_cat)) +
stat_voronoi(color="black") + scale_fill_manual(values=cols) +
geom_point() +
geom_text(aes(LocationX, LocationY+1000, label = id), size = 2)+
coord_fixed(ratio=1)+ theme_bw()
x11(width = 10, height = 2); mcmc_dens_overlay(
array,
pars = c(
"diff_species[1]",
"diff_species[2]",
"diff_species[3]",
"diff_species[4]",
"diff_species[5]",
"diff_species[6]"),
facet_args = list(nrow = 1)
) +
theme(axis.text = element_text(size = 14),
axis.text.x = element_text(angle = 45, hjust = 1),
strip.text.x = element_text(size = 14))
species <- stats[grep('species\\[', rownames(stats)),]
species <- cbind(species, data %>% group_by(True_Species) %>% summarize(ns = n(), prop = mean(correct)) %>% data.frame())
names(species)[grep('%', names(species))] <- c('q2.5','q25', 'q50', 'q75', 'q97.5')
x11(); ggplot(species, aes(x= prop, y = mean)) + geom_point() +
geom_errorbar(aes(ymin=q2.5, ymax=q97.5))
x11(width = 5, height = 2);mcmc_dens_overlay(
array,
pars = c(
"var_ed",
"alpha_ed",
"var_nug"),
facet_args = list(nrow = 1)
) +
theme(axis.text = element_text(size = 14),
axis.text.x = element_text(angle = 60, hjust = 1),
strip.text.x = element_text(size = 14))
x11(width = 10, height = 2); mcmc_dens_overlay(
array,
pars = c(
"beta[1]",
"beta[2]"),
facet_args = list(nrow = 1)
) +
theme(axis.text = element_text(size = 14),
axis.text.x = element_text(angle = 45, hjust = 1),
strip.text.x = element_text(size = 14))
#fit <- ir_spat(formula = site ~ -1 + Standing + Resting + Moving + Eating + Interacting + Babies,
#               data = data,
#               spat_model = 'exp',
#               itemtype = '3PLUS',
#               abil = 'user',
#               diff = 'id',
#               coords = c("LocationX", "LocationY"),
#               iter = 4000,
#               warmup = 2000,
#               chains = 3,
#               refresh = 100,
#               seed = seed
#)
#saveRDS(fit, 'fit.rds')
# fit <- readRDS('fit.rds')
paste0('abil[',1:30,']' )
x11(width = 10, height = 4); mcmc_dens_overlay(
array,
pars = paste0('abil[',1:30,']' ) ,
facet_args = list(nrow = 2))
x11(width = 10, height = 4); mcmc_dens_overlay(
array,
pars = paste0('abil[',1:30,']' ) ,
facet_args = list(nrow = 4))
data$id
length(unique(data$id))
species <- stats[grep('species\\[', rownames(stats)),]
species <- cbind(species, data %>% group_by(True_Species) %>% summarize(ns = n(), prop = mean(correct)) %>% data.frame())
names(species)[grep('%', names(species))] <- c('q2.5','q25', 'q50', 'q75', 'q97.5')
species <- stats[grep('species\\[', rownames(stats)),]
species <- cbind(species, data %>% group_by(True_Species) %>% summarize(ns = n(), prop = mean(correct)) %>% data.frame())
View(species)
View(species)
names(species)[grep('%', names(species))] <- c('q2.5','q25', 'q50', 'q75', 'q97.5')
x11(); ggplot(species, aes(x= prop, y = mean)) + geom_point() +
geom_text(aes(x= prop, y = mean + 0.05, label = True_Species)) +
geom_errorbar(aes(ymin=q2.5, ymax=q97.5))
x11(); ggplot(species, aes(x= prop, y = mean)) + geom_point() +
geom_text_repel(aes(x= prop, y = mean + 0.05, label = True_Species)) +
geom_errorbar(aes(ymin=q2.5, ymax=q97.5))
table(species$True_Species)
table(data$True_Species)
seed <- 202105
set.seed(seed)
data <- seren[names(table(seren$CaptureEventID)[(table(seren$CaptureEventID) > 30) ]) & seren$True_Species != 'human',
seren$CaptureEventID %in% ,]
seed <- 202105
set.seed(seed)
data <- seren[seren$CaptureEventID %in% names(table(seren$CaptureEventID)[(table(seren$CaptureEventID) > 30) ]) & seren$True_Species != 'human',]
data <- data[data$user %in% names(table(data$user)[(table(data$user) > 30) ]),]
data <- data[data$user %in% unique(data$user)[1:30],]
images <- sort(table(data$CaptureEventID), decreasing = T)
images <- names(images[images > 10])
data <- data[data$CaptureEventID %in% images,]
length(unique(data$user))
length(unique(data$CaptureEventID))
length(unique(data$id))
# creating a unique site id
data$id <- as.numeric(factor(data$id))
# creating a unique image id
data$CaptureEventID <- as.numeric(factor(data$CaptureEventID))
# creating a unique user id
data$user <- as.numeric(factor(data$user))
x11(); ggplot(data) + geom_raster(aes(y= CaptureEventID, x = user))
x11(); ggplot(data) + geom_raster(aes(y= id, x = user))
# spatial exponential with two covariates
fit <- ir_spat(formula = site ~ -1 + Moving + Babies,
data = data,
spat_model = 'exp',
itemtype = '1PLUS',
abil = 'user',
diff = 'id',
y = 'correct',
coords = c("LocationX", "LocationY"),
iter = 10000,
warmup = 5000,
chains = 3,
refresh = 100,
seed = seed
)
saveRDS(fit, 'fit_spatial_covar8.rds')
stats <- summary(fit)
stats <- stats$summary
array <- as.array(fit)
x11(width = 10, height = 4); mcmc_dens_overlay(
array,
pars = paste0('abil[',1:30,']' ) ,
facet_args = list(nrow = 4))
abils <- stats[grep('abil\\[', rownames(stats)),]
abils <- cbind(abils, data %>% group_by(user) %>% summarize(ns = n(), prop = mean(correct)) %>% data.frame())
names(abils)[grep('%', names(abils))] <- c('q2.5','q25', 'q50', 'q75', 'q97.5')
x11(); ggplot(abils, aes(x= prop, y = mean)) + geom_point() +
xlab('proportion of correct classification')
x11(); mcmc_trace(fit, pars = c(
"abil[1]",
"abil[2]",
"abil[3]",
"abil[4]",
"abil[5]",
"abil[6]"))
View(abils)
x11(); ggplot(abils, aes(x= prop, y = mean)) + geom_point() +
geom_text_repel(aes(x= prop, y = mean, label = user)) +
xlab('proportion of correct classification')
x11(); ggplot(abils, aes(x= prop, y = mean)) + geom_point() +
geom_text_repel(aes(x= prop, y = mean, label = user), size = 1) +
xlab('proportion of correct classification')
x11(); ggplot(abils, aes(x= prop, y = mean)) + geom_point() +
geom_text_repel(aes(x= prop, y = mean, label = user), size = 3) +
xlab('proportion of correct classification')
x11(); ggplot(abils, aes(x= prop, y = mean)) + geom_point() +
geom_text_repel(aes(x= prop, y = mean, label = user), size = 2.5) +
xlab('proportion of correct classification')
x11(width = 10, height = 2); mcmc_dens_overlay(
array,
pars = c(
"difficulty[1]",
"difficulty[2]",
"difficulty[3]",
"difficulty[4]",
"difficulty[5]",
"difficulty[6]"),
facet_args = list(nrow = 1)
) +
theme(axis.text = element_text(size = 14),
axis.text.x = element_text(angle = 45, hjust = 1),
strip.text.x = element_text(size = 14))
diff <- stats[grep('difficulty\\[', rownames(stats)),]
diff <- cbind(diff, data %>% group_by(id, LocationX, LocationY) %>% summarize(ns = n(), prop = mean(correct)) %>% data.frame())
diff$diff_cat <- cut(diff$mean, breaks = c(-10,quantile(diff$mean)[2:4],10), 1:4, include.lowest = T)
cols = brewer.pal(5,'Reds')
x11(); ggplot(diff , aes(LocationX, LocationY, fill = diff_cat)) +
stat_voronoi(color="black") + scale_fill_manual(values=cols) +
geom_point() +
geom_text(aes(LocationX, LocationY+1000, label = id), size = 2)+
coord_fixed(ratio=1)+ theme_bw()
x11(width = 10, height = 2); mcmc_dens_overlay(
array,
pars = c(
"diff_species[1]",
"diff_species[2]",
"diff_species[3]",
"diff_species[4]",
"diff_species[5]",
"diff_species[6]"),
facet_args = list(nrow = 1)
) +
theme(axis.text = element_text(size = 14),
axis.text.x = element_text(angle = 45, hjust = 1),
strip.text.x = element_text(size = 14))
species <- stats[grep('species\\[', rownames(stats)),]
species <- cbind(species, data %>% group_by(True_Species) %>% summarize(ns = n(), prop = mean(correct)) %>% data.frame())
names(species)[grep('%', names(species))] <- c('q2.5','q25', 'q50', 'q75', 'q97.5')
x11(); ggplot(species, aes(x= prop, y = mean)) + geom_point() +
geom_text_repel(aes(x= prop, y = mean + 0.05, label = True_Species)) +
geom_errorbar(aes(ymin=q2.5, ymax=q97.5))
x11(); mcmc_trace(fit, pars = c(
"abil[1]",
"abil[2]",
"abil[3]",
"abil[4]",
"abil[5]",
"abil[6]"))
View(stats)
download.file("https://github.com/EdgarSantos-Fernandez/hakuna/serengety_gs.RDS", "serengety_gs.RDS", method="curl")
download.file("https://github.com/EdgarSantos-Fernandez/hakuna/serengety_gs.RDS", "serengety_gs.RDS", method="curl")
download.file("https://github.com/EdgarSantos-Fernandez/hakuna/serengety_gs.RDS", "serengety_gs3.RDS", method="curl")
download.file("https://github.com/EdgarSantos-Fernandez/hakuna/blob/main/serengety_gs.RDS", "serengety_gs4.RDS", method="curl")
download.file("https://github.com/EdgarSantos-Fernandez/hakuna/blob/main/serengety_gs.RDS", "serengety_gs4.RDS")
download.file("https://raw.github.com/EdgarSantos-Fernandez/hakuna/blob/main/serengety_gs.RDS", "serengety_gs5.RDS", method="curl")
download.file("https://raw.github.com/EdgarSantos-Fernandez/hakuna/blob/main/serengety_gs.RDS", "serengety_gs5.RDS")
download.file("https://raw.github.com/EdgarSantos-Fernandez/hakuna/main/serengety_gs.RDS", "serengety_gs5.RDS")
getwd()
dir <- getwd()
dir
paste0(dir, '//serengety_gs.RDS')
tempdir()
data <- readRDS("serengety_gs.RDS")
tempdir()
data <- readRDS("serengety_IRT.RDS")
data <- readRDS("serengety_gs.RDS")
data <- readRDS("serengety_gs.RDS")
readr::read_rds("serengety_gs.RDS")
readr::read_rds("serengety_IRT.RDS")
data <- readRDS("serengety_IRT.RDS")
saveRDS(data, serengety_gs2, version = 3)
saveRDS(data, 'serengety_gs2', version = 3)
saveRDS(data, 'serengety_gs-.rds', version = 3)
exp90.7
exp(0.7)
data <- readRDS("C:\1\hakuna\serengety_gs.rds")
data <- readRDS("C:\\1\\hakuna\\serengety_gs.rds")
data <- readRDS("serengety_gs_git.rds")
data
download.file("https://raw.github.com/EdgarSantos-Fernandez/hakuna/main/serengety_gs.rds", "serengety_gs_git2")
download.file("https://raw.github.com/EdgarSantos-Fernandez/hakuna/main/serengety_gs.rds", "serengety_gs_git2.rds")
data <- readRDS("serengety_gs_git2.RDS")
x11(width = 10, height = 2); mcmc_dens_overlay(
array,
pars = c(
"beta[1]",
"beta[2]"),
facet_args = list(nrow = 1)
) +
theme(axis.text = element_text(size = 14),
axis.text.x = element_text(angle = 45, hjust = 1),
strip.text.x = element_text(size = 14))
1
18.38*0.1979/365
18.38*0.1979/365*500
(18.38+3.57)*0.1979/365*500
0.0005*500
(22.02451894)*0.1979/365*500
35*0.1979/365*40
.libPaths('C:\\1\\R')
library(devtools)
devtools::document()
load_all()
load_all()
.libPaths('C:\\1\\R')
library(devtools)
devtools::document()
devtools::load_all(".")
library(staircase)
library(staircase)
0.1591/2
(0.1591/2)*3
(0.1591/2)*3*0.1979
(0.1591/2)*3*0.1979/365
(0.1591/2)*3*0.1979/365*600
load_all()
.libPaths('C:\\1\\R')
library(devtools)
devtools::document()
load_all()
.libPaths('C:\\1\\R')
library(devtools)
devtools::document()
load_all()
devtools::document()
library(staircase)
devtools::load_all(".")
devtools::document()
devtools::load_all(".")
library(staircase)
devtools::load_all(".")
devtools::document()
library(staircase)
devtools::load_all(".")
library(staircase)
devtools::load_all(".")
library(staircase)
devtools::load_all(".")
document()
devtools::load_all(".")
library(staircase)
document()
devtools::load_all(".")
library(staircase)
